apply from: "$rootDir/java.gradle"
apply from: "$rootDir/pmd.gradle"
apply from: "$rootDir/intellij.gradle"

sourceSets {
    main {
        ext.originalJavaSrcDirs = java.srcDirs
        ext.originalJavaResourceDirs = resources.srcDirs
        java {
            srcDirs += ['src/metadata/main/java']
        }
        resources {
            srcDirs += ['src/metadata/main/resources']
        }
    }
}

dependencies {
    compile project(':code-generator-api')
    compile project(':code-generator')
}


task generateExampleDataGeneratedMainSourceCode(type: JavaExec, dependsOn: 'classes') {
    group = 'Code Generation'
    description = 'Generate code for the example-data layers main classes.'
    ext.mainSourceDestinationDir = file("${project(':example-data').projectDir}/src/generated/main/java")

    classpath = sourceSets.main.runtimeClasspath
    main = 'ch.johannes.example.generator.MainCodeGeneratorRunnable'
    args mainSourceDestinationDir.absolutePath

    //support for incremental build support
    inputs.dir sourceSets.main.runtimeClasspath
    outputs.dir mainSourceDestinationDir.absolutePath;

    //to avoid incremental build support for this task
    outputs.dir file("${buildDir}/tmp/apt/d" + Math.random()) //sourceDestDir.absolutePath;

}

task generateExampleDataGeneratedTestSourceCode(type: JavaExec, dependsOn: 'classes') {
    group = 'Code Generation'
    description = 'Generate code for the example-data layers test classes.'
    ext.testSourceDestinationDir = file("${project(':example-data').projectDir}/src/generated/test/java")

    classpath = sourceSets.main.runtimeClasspath
    main = 'ch.johannes.example.generator.TestCodeGeneratorRunnable'
    args testSourceDestinationDir.absolutePath

    //support for incremental build support
    inputs.dir sourceSets.main.runtimeClasspath
    outputs.dir testSourceDestinationDir.absolutePath;

    //to avoid incremental build support for this task
    outputs.dir file("${buildDir}/tmp/apt/d" + Math.random()) //sourceDestDir.absolutePath;

}
