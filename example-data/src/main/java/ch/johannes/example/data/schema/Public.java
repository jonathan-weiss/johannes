/**
 * This class is generated by jOOQ
 */
package ch.johannes.example.data.schema;


import ch.johannes.example.data.schema.tables.Address;
import ch.johannes.example.data.schema.tables.EntityAccess;
import ch.johannes.example.data.schema.tables.EntityAccessView;
import ch.johannes.example.data.schema.tables.GroupAccessView;
import ch.johannes.example.data.schema.tables.GroupMembership;
import ch.johannes.example.data.schema.tables.Person;
import ch.johannes.example.data.schema.tables.PersonAndAddressView;
import ch.johannes.example.data.schema.tables.SchemaVersion;
import ch.johannes.example.data.schema.tables.UserMapping;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

	private static final long serialVersionUID = 1330829541;

	/**
	 * The reference instance of <code>public</code>
	 */
	public static final Public PUBLIC = new Public();

	/**
	 * No further instances allowed
	 */
	private Public() {
		super("public");
	}

	@Override
	public final List<Sequence<?>> getSequences() {
		List result = new ArrayList();
		result.addAll(getSequences0());
		return result;
	}

	private final List<Sequence<?>> getSequences0() {
		return Arrays.<Sequence<?>>asList(
			Sequences.ADDRESS_SEQUENCE,
			Sequences.PERSON_SEQUENCE);
	}

	@Override
	public final List<Table<?>> getTables() {
		List result = new ArrayList();
		result.addAll(getTables0());
		return result;
	}

	private final List<Table<?>> getTables0() {
		return Arrays.<Table<?>>asList(
			Address.ADDRESS,
			EntityAccess.ENTITY_ACCESS,
			EntityAccessView.ENTITY_ACCESS_VIEW,
			GroupAccessView.GROUP_ACCESS_VIEW,
			GroupMembership.GROUP_MEMBERSHIP,
			Person.PERSON,
			PersonAndAddressView.PERSON_AND_ADDRESS_VIEW,
			SchemaVersion.SCHEMA_VERSION,
			UserMapping.USER_MAPPING);
	}
}
