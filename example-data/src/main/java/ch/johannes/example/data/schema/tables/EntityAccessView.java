/**
 * This class is generated by jOOQ
 */
package ch.johannes.example.data.schema.tables;


import ch.johannes.example.data.schema.Public;
import ch.johannes.example.data.schema.tables.records.EntityAccessViewRecord;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityAccessView extends TableImpl<EntityAccessViewRecord> {

	private static final long serialVersionUID = -856405247;

	/**
	 * The reference instance of <code>public.entity_access_view</code>
	 */
	public static final EntityAccessView ENTITY_ACCESS_VIEW = new EntityAccessView();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EntityAccessViewRecord> getRecordType() {
		return EntityAccessViewRecord.class;
	}

	/**
	 * The column <code>public.entity_access_view.entity_guid</code>.
	 */
	public final TableField<EntityAccessViewRecord, UUID> ENTITY_GUID = createField("entity_guid", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>public.entity_access_view.accessor_guid</code>.
	 */
	public final TableField<EntityAccessViewRecord, UUID> ACCESSOR_GUID = createField("accessor_guid", org.jooq.impl.SQLDataType.UUID, this, "");

	/**
	 * The column <code>public.entity_access_view.access_level</code>.
	 */
	public final TableField<EntityAccessViewRecord, Integer> ACCESS_LEVEL = createField("access_level", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>public.entity_access_view</code> table reference
	 */
	public EntityAccessView() {
		this("entity_access_view", null);
	}

	/**
	 * Create an aliased <code>public.entity_access_view</code> table reference
	 */
	public EntityAccessView(String alias) {
		this(alias, ENTITY_ACCESS_VIEW);
	}

	private EntityAccessView(String alias, Table<EntityAccessViewRecord> aliased) {
		this(alias, aliased, null);
	}

	private EntityAccessView(String alias, Table<EntityAccessViewRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EntityAccessView as(String alias) {
		return new EntityAccessView(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EntityAccessView rename(String name) {
		return new EntityAccessView(name, null);
	}
}
