/**
 * This class is generated by jOOQ
 */
package ch.johannes.example.data.schema.tables.records;


import ch.johannes.example.data.schema.enums.GenderTypeEnum;
import ch.johannes.example.data.schema.tables.Person;

import java.util.UUID;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.3"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record5<Integer, UUID, String, String, GenderTypeEnum> {

	private static final long serialVersionUID = -1864185055;

	/**
	 * Setter for <code>public.person.id</code>.
	 */
	public PersonRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.person.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.person.guid</code>.
	 */
	public PersonRecord setGuid(UUID value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.person.guid</code>.
	 */
	public UUID getGuid() {
		return (UUID) getValue(1);
	}

	/**
	 * Setter for <code>public.person.firstname</code>.
	 */
	public PersonRecord setFirstname(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.person.firstname</code>.
	 */
	public String getFirstname() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.person.lastname</code>.
	 */
	public PersonRecord setLastname(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.person.lastname</code>.
	 */
	public String getLastname() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.person.gender</code>.
	 */
	public PersonRecord setGender(GenderTypeEnum value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.person.gender</code>.
	 */
	public GenderTypeEnum getGender() {
		return (GenderTypeEnum) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, UUID, String, String, GenderTypeEnum> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Integer, UUID, String, String, GenderTypeEnum> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Person.PERSON.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<UUID> field2() {
		return Person.PERSON.GUID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Person.PERSON.FIRSTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Person.PERSON.LASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<GenderTypeEnum> field5() {
		return Person.PERSON.GENDER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UUID value2() {
		return getGuid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getFirstname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getLastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public GenderTypeEnum value5() {
		return getGender();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value2(UUID value) {
		setGuid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value3(String value) {
		setFirstname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value4(String value) {
		setLastname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord value5(GenderTypeEnum value) {
		setGender(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public PersonRecord values(Integer value1, UUID value2, String value3, String value4, GenderTypeEnum value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached PersonRecord
	 */
	public PersonRecord() {
		super(Person.PERSON);
	}

	/**
	 * Create a detached, initialised PersonRecord
	 */
	public PersonRecord(Integer id, UUID guid, String firstname, String lastname, GenderTypeEnum gender) {
		super(Person.PERSON);

		setValue(0, id);
		setValue(1, guid);
		setValue(2, firstname);
		setValue(3, lastname);
		setValue(4, gender);
	}
}
